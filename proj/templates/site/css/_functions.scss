@use "sass:map";

@use "variables" as *;

@function GetImage($file) {
	@return url('img/' + $file);
}

@function GetImageUI($file) {
	@return GetImage('ui/' + $file);
}

@function GetImageUIWhite($file) {
	@return GetImageUI('white/' + $file);
}

@function GetImageUIPrimary($file) {
	@return GetImageUI('primary/' + $file);
}

@function GetImageUIPrimaryLight($file) {
	@return GetImageUI('primary_light/' + $file);
}

@function GetValue($defaults, $params, $name) {
	@if ($params != null) {
		$temp: map.get($params, $name);
		@if ($temp != null) { @return $temp; }
	}

	@return map.get($defaults, $name);
}

@function GetParam($params, $name, $default) {
	@if ($params != null) {
		$temp: map.get($params, $name);
		@if ($temp != null) { @return $temp; }
	}

	@return $default;
}

@mixin MixScreen($min: null, $max: null, $screen: false, $print: false) {
	@if ($min != null or $max != null or $screen or $print) {

		$media: '';
		$fill: false;

		@if ($screen) { $media: 'screen'; $fill: true; }
		@if ($print) { @if ($fill) { $media: $media + ' AND '; } $media: $media + 'print'; $fill: true; }
		@if ($min) { @if ($fill) { $media: $media + ' AND '; } $media: $media + '(min-width: ' + ($min + 1) + 'px)'; $fill: true; }
		@if ($max) { @if ($fill) { $media: $media + ' AND '; } $media: $media + '(max-width: ' + $max + 'px)'; }

		@media #{$media} {
			@content;
		}

	} @else {
		@content;
	}
}

@mixin MixPrint() {
	@include MixScreen(null, null, false, true) { @content; }
}

@mixin MixBtn {
	display: inline-block; padding: 0.6rem 1.6rem; border: 0.2rem solid $color-btn-border; background-color: $color-btn-bg; color: $color-text-primary; cursor: pointer;
	&.img { padding-left: 2.8rem; background-size: 1.4rem; background-position: 0.7rem center; background-repeat: no-repeat; }
	&:hover { border-color: $color-btn-border-hover; background-color: $color-btn-bg-hover; }
	&:active, &:focus-visible { border-color: $color-btn-border-active; background-color: $color-btn-bg-active; }
	&:disabled { border-color: $color-neutral; background-color: $color-neutral; color: $color-text-primary; }
	&.negative {
		border-color: $color-negative-btn-bg; background-color: $color-negative-btn-bg;
		&:hover { border-color: $color-negative-btn-border-hover; background-color: $color-negative-btn-bg-hover; }
		&:active, &:focus-visible { border-color: $color-negative-btn-border-active; background-color: $color-negative-btn-bg-active; }
	}
}

@mixin MixText {
	padding: 0.6rem 1.6rem; border: 0.2rem solid $color-text-border; outline: none;
	&:hover { border-color: $color-text-border-hover; }
	&:active, &:focus-visible { border-color: $color-text-border-active; }
	&:disabled { border-color: $color-neutral; background-color: $color-neutral; color: $color-text-primary; }
}

@mixin MixTextarea {
	@include MixText; resize: none;
}