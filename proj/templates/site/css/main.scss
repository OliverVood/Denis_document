@use "sass:map";

@use "variables" as *;
@use "functions" as *;

@import "fonts";

a { cursor: pointer; color: $color-text; text-decoration: none; }
h1 { margin: 0 0 3rem; font-size: 2.2rem; font-weight: normal; text-align: center; }
h2 { margin: 0 0 1rem; }
h3 { margin: 0 0 0.5rem; }
input { @include MixText; font-family: PetersburgC, sans-serif; font-size: 1.2rem; }
input[type="button"], input[type="submit"], .button { @include MixBtn; outline: none; text-decoration: none; }
textarea { @include MixTextarea; font-family: PetersburgC, sans-serif; font-size: 1.2rem; }
.hide { display: none; }
.items_margin_bottom > *:not(:last-child) { margin-bottom: $items_margin; }
.items_margin_bottom_cut > *:not(:last-child) { margin-bottom: $items_margin_cut; }
label .required:after { content: "*"; margin-left: 4px; color: $color_negative; }
.document {
	font-family: Monitorica, sans-serif;
	input { font-family: Monitorica, sans-serif; font-size: 1.2rem; }
}
.link {
	&:hover {  }
}

@mixin MixMain($params: null) {
	$default: (
		display_print			: none,
		display_print_tabu		: null
	);
	$display_print_tabu: null;
	@if ($params != null) { $display_print_tabu: map.get($params, 'display_print_tabu'); }

	.glob_print { display: GetValue($default, $params, 'display_print') !important; }
	@if ($display_print_tabu != null) { .glob_print_tabu { display: GetValue($default, $params, 'display_print_tabu') !important; } }
}

@include MixScreen() { @include MixMain(); }
@include MixPrint() { @include MixMain((display_print: revert, display_print_tabu: none)); }

@import "template";
@import "skins/skins";
@import "units/general";
@import "units/catalogs";
@import "units/news";
@import "units/feedback";